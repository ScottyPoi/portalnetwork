
  /**
   * @license
   * author: acolytec3
   * portalnetwork.js v0.0.1
   * Released under the MIT license.
   */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var discv5 = require('@chainsafe/discv5');
var bn_js = require('bn.js');

const MODULO = new bn_js.BN(2).pow(new bn_js.BN(256));
const MID = new bn_js.BN(2).pow(new bn_js.BN(255));
const distance = (id1, id2) => {
    const num1 = new bn_js.BN(id1);
    const num2 = new bn_js.BN(id2);
    let diff;
    num1.gt(num2) ? diff = num1.sub(num2) : diff = num2.sub(num1);
    diff.gt(MID) ? diff = MODULO.sub(diff) : diff;
    return diff;
};

class OverlayRoutingTable extends discv5.KademliaRoutingTable {
    nearest(id, limit) {
        const results = [];
        this.buckets.forEach((bucket) => {
            results.push(...bucket.values());
        });
        results.sort((a, b) => {
            const diff = distance(id, a.nodeId).sub(distance(id, b.nodeId));
            if (diff.isNeg())
                return -1;
            if (diff.isZero())
                return 0;
            return 1;
        });
        return results.slice(0, limit);
    }
}

Object.defineProperty(exports, 'Discv5', {
    enumerable: true,
    get: function () { return discv5.Discv5; }
});
exports.OverlayRoutingTable = OverlayRoutingTable;
exports.distance = distance;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9ydGFsbmV0d29yay5janMuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9zcmMvZGh0L3V0aWwudHMiLCIuLi9zcmMvc3JjL2RodC9kaHQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQk4gfSBmcm9tICdibi5qcyc7XG5cbmNvbnN0IE1PRFVMTyA9IG5ldyBCTigyKS5wb3cobmV3IEJOKDI1NikpXG5jb25zdCBNSUQgPSBuZXcgQk4oMikucG93KG5ldyBCTigyNTUpKVxuXG5leHBvcnQgY29uc3QgZGlzdGFuY2UgPSAoaWQxOiBzdHJpbmcsIGlkMjogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgbnVtMSA9IG5ldyBCTihpZDEpO1xuICAgIGNvbnN0IG51bTIgPSBuZXcgQk4oaWQyKTtcblxuICAgIGxldCBkaWZmXG4gICAgbnVtMS5ndChudW0yKSA/IGRpZmYgPSBudW0xLnN1YihudW0yKSA6IGRpZmYgPSBudW0yLnN1YihudW0xKVxuICAgIGRpZmYuZ3QoTUlEKSA/IGRpZmYgPSBNT0RVTE8uc3ViKGRpZmYpIDogZGlmZlxuICAgIHJldHVybiBkaWZmXG59IiwiaW1wb3J0IHsgRU5SLCBLYWRlbWxpYVJvdXRpbmdUYWJsZSwgTm9kZUlkIH0gZnJvbSAnQGNoYWluc2FmZS9kaXNjdjUnXG5pbXBvcnQgeyBCTiB9IGZyb20gJ2JuLmpzJztcbmltcG9ydCB7IGRpc3RhbmNlIH0gZnJvbSAnLi91dGlsJ1xuXG5cbmV4cG9ydCBjbGFzcyBPdmVybGF5Um91dGluZ1RhYmxlIGV4dGVuZHMgS2FkZW1saWFSb3V0aW5nVGFibGUge1xuICAgIG5lYXJlc3QoaWQ6IE5vZGVJZCwgbGltaXQ6IG51bWJlcik6IEVOUltdIHtcbiAgICAgICAgY29uc3QgcmVzdWx0czogRU5SW10gPSBbXTtcbiAgICAgICAgdGhpcy5idWNrZXRzLmZvckVhY2goKGJ1Y2tldCkgPT4ge1xuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKC4uLmJ1Y2tldC52YWx1ZXMoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXN1bHRzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRpZmYgPSBkaXN0YW5jZShpZCwgYS5ub2RlSWQpLnN1YihkaXN0YW5jZShpZCwgYi5ub2RlSWQpKTtcbiAgICAgICAgICAgIGlmIChkaWZmLmlzTmVnKCkpIHJldHVybiAtMTtcbiAgICAgICAgICAgIGlmIChkaWZmLmlzWmVybygpKSByZXR1cm4gMDtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gcmVzdWx0cy5zbGljZSgwLCBsaW1pdCk7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJCTiIsIkthZGVtbGlhUm91dGluZ1RhYmxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFFQSxNQUFNLE1BQU0sR0FBRyxJQUFJQSxRQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUlBLFFBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0FBQ3pDLE1BQU0sR0FBRyxHQUFHLElBQUlBLFFBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSUEsUUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7TUFFekIsUUFBUSxHQUFHLENBQUMsR0FBVyxFQUFFLEdBQVc7SUFDN0MsTUFBTSxJQUFJLEdBQUcsSUFBSUEsUUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLE1BQU0sSUFBSSxHQUFHLElBQUlBLFFBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUV6QixJQUFJLElBQUksQ0FBQTtJQUNSLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDN0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUE7SUFDN0MsT0FBTyxJQUFJLENBQUE7QUFDZjs7TUNSYSxtQkFBb0IsU0FBUUMsMkJBQW9CO0lBQ3pELE9BQU8sQ0FBQyxFQUFVLEVBQUUsS0FBYTtRQUM3QixNQUFNLE9BQU8sR0FBVSxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNO1lBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztTQUNwQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDZCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNoRSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUM1QixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQUUsT0FBTyxDQUFDLENBQUM7WUFDNUIsT0FBTyxDQUFDLENBQUM7U0FDWixDQUFDLENBQUE7UUFDRixPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ2xDOzs7Ozs7Ozs7OyJ9
